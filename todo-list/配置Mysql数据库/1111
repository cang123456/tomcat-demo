mysql8用什么连接java

获取驱动
    Maven 项目：在 pom.xml 中添加依赖
    <dependency>
        <groupId>com.mysql</groupId>
        <artifactId>mysql-connector-j</artifactId>
        <version>8.0.33</version> <!-- 最新版本可到 Maven 仓库查询 -->
    </dependency>
    非 Maven 项目：从 MySQL 官网 下载 mysql-connector-j-8.0.x.jar，并添加到项目的类路径中


创建mysql测试表：
      use test;

      create table emp(
          emp_name varchar(10) comment '姓名',
          emp_sex varchar(10) comment '性别',
          emp_age int(2) comment '年龄'
      );

      use test;
      作用：切换到名为 test 的数据库，后续的表操作将在该数据库中进行。
      说明：test 是 MySQL 中默认存在的测试数据库，也可以替换为你自己创建的数据库名称（需先确保该数据库已存在）。
      create table emp(...);
      作用：在当前数据库（此处为 test）中创建名为 emp 的表，表结构包含 3 个字段，用于存储员工的基本信息。
      表中字段说明：
      emp_name varchar(10) comment '姓名'
      emp_name：字段名（员工姓名）。
      varchar(10)：字段类型为可变长度字符串，最大长度为 10 个字符（可存储中文姓名，一个中文占 1 个字符位置）。
      comment '姓名'：字段的注释，用于说明该字段的含义。
      emp_sex varchar(10) comment '性别'
      存储员工性别，类型为 varchar(10)，可存储 “男”“女” 等字符串。
      emp_age int(2) comment '年龄'
      emp_age：字段名（员工年龄）。
      int(2)：字段类型为整数，(2) 表示显示宽度（不影响实际存储范围，整数类型默认可存储 -2147483648 到 2147483647 之间的值）。

    插入测试数据：
    INSERT INTO emp VALUES("王明","女","39"),("郑宇","男","35"),("何晓晓","女","32"),("刘一鸣","男","41");

    查询数据：
    select * from emp
连接代码示例:
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

public class Test {
    public static void main(String[] args) {
        // 数据库连接相关信息（请替换为你的实际配置）
        String url = "jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai";
        String username = "root";
        String password = "你的数据库密码";

        Connection connection = null;
        Statement statement = null;
        ResultSet resultSet = null;

        try {
            // 获取数据库连接
            connection = DriverManager.getConnection(url, username, password);
            statement = connection.createStatement();

            // 查询 emp 表（使用小写表名，与创建时保持一致）
            String sql = "select * from emp";
            resultSet = statement.executeQuery(sql);

            // 遍历结果集（使用实际的字段名 emp_name、emp_sex、emp_age）
            while (resultSet.next()) {
                String name = resultSet.getString("emp_name");  // 修正字段名
                String sex = resultSet.getString("emp_sex");    // 修正字段名
                int age = resultSet.getInt("emp_age");          // 修正字段名，使用int类型

                System.out.print("姓名: " + name);
                System.out.print("  性别: " + sex);
                System.out.print("  年龄: " + age);
                System.out.println();
            }
        } catch (SQLException e) {
            e.printStackTrace();
            System.out.println("数据库操作异常");
        } finally {
            // 关闭资源
            try {
                if (resultSet != null) resultSet.close();
                if (statement != null) statement.close();
                if (connection != null) connection.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }
}